[{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"CNHplus provides R functions estimating tumor purity, tumor ploidy, Absolute Copy Number (ACN) profile tumor Copy Number Heterogeneity (CNH) (van Dijk et al. 2021) Relative Copy Number (RCN) profile sample, CNHplus method (Grendár et al. 2022). CNHplus modifies original CNH method (van Dijk et al. 2021) imposing non-negativity constraint recovered ACN profile.","code":""},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"cnh-and-cnh","dir":"Articles","previous_headings":"","what":"CNH and CNH+","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"(van Dijk et al. 2021) introduced single-sample method estimating Intra-Tumor Heterogeneity Copy Number Variation (CNV) data, dubbed Copy Number Heterogeneity. ACN profiles, recovered CNH, may contain segments negative number copies; cf. (Grendár et al. 2022). CNHplus method, - CNH+, short, - implemented CNHplus library, corrects omission CNH imposes non-negativity constraint ACN tumor searching solution optimization problem defines CNH.","code":""},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"loading-cnhplus","dir":"Articles","previous_headings":"","what":"Loading CNHplus","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"CNHplus libraries necessary illustrating use loaded, first.","code":"library('CNHplus') library('TCGAbiolinks') library('stringi') library('openxlsx') library('dplyr')"},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"RCN profile sample, input CNH computations, can obtained either microarray technology shallow Whole Genome Sequencing. RCN profile data frame comprise following variables, minimum: Sample Chromosome Start End Segment_Mean Note CNHplus assumes Segment_Mean relative copy number segment, log2 transformation.","code":""},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"plotting-rcn-profile-of-a-sample","dir":"Articles","previous_headings":"","what":"Plotting RCN profile of a sample","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"order reproduce example (Grendár et al. 2022), necessary load RCN data TCGA-AJ-A3EJ-01A-11D-A19X-01 sample, included CNHplus. Next, order plot RCN profile sample, necessary prepare RCN profile (anti-log2 transforming Segment_Mean data) vector widths segments. plot_profile function plots RCN profile sample saves tiff file file name specified sample_name.  function can used also plotting ACN profiles.","code":"data(sample_data) head(sample_data) #>                         Sample Chromosome    Start      End Num_Probes #> 1 TCGA-AJ-A3EJ-01A-11D-A19X-01          1    61735   356542         29 #> 2 TCGA-AJ-A3EJ-01A-11D-A19X-01          1   404171 15599807       8074 #> 3 TCGA-AJ-A3EJ-01A-11D-A19X-01          1 15600049 16065607        266 #> 4 TCGA-AJ-A3EJ-01A-11D-A19X-01          1 16075128 16153497         54 #> 5 TCGA-AJ-A3EJ-01A-11D-A19X-01          1 16153536 16155010          9 #> 6 TCGA-AJ-A3EJ-01A-11D-A19X-01          1 16165661 16830820        295 #>   Segment_Mean #> 1      -0.6532 #> 2       0.1152 #> 3       0.4350 #> 4       0.8853 #> 5      -1.4492 #> 6       0.9010 sa = sample_data sample_name = sa$Sample[1] r = 2^sa$Segment_Mean w = sa$End - sa$Start # should be +1 # RCN profile plot plot_profile(sa, r, paste0(sample_name, '_RCN.tiff'),              ylim = c(0,5), ylab = 'RCN')"},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"finding-cnh-and-cnh","dir":"Articles","previous_headings":"","what":"Finding CNH+ (and CNH)","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"CNHplus finds solution optimization problem (4’) (Grendár et al. 2022) searching grid pairs tumor purities tumor ploidies. grid can created make_grid function. find_cnhplus function requires grid relative copy number profile input. number candidate solutions k can specified. function also permits finding CNH solution (van Dijk et al. 2021), ignores non-negativity ACN constraint, turning plus False.","code":"# making grid grid = make_grid(purity = seq(0.2, 1, 0.01), ploidy = seq(1.5, 5, 0.01))"},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"cnh","dir":"Articles","previous_headings":"Finding CNH+ (and CNH)","what":"CNH","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"CNH estimates tumor purity, tumor ploidy CNH value (.e., kappa): ACN recovered CNH, can obtained r2q function, using RCN data CNH estimates tumor purity, tumor ploidy input. ACN profile tumor, recovered CNH can plotted plot_profile function.  number copies negative numerous segments.","code":"# ACN profile for CNH cnh = find_cnhplus(grid, r = r, w = w, k = 2, plus = F) cnh #>   purity ploidy     kappa #> 1   0.24   2.87 0.1384375 #> 2   0.27   3.86 0.1387208 acn_cnh = r2q(r, cnh$purity[1], cnh$ploidy[1]) plot_profile(sa, acn_cnh, paste0(sample_name, '_ACN_for_CNH.tiff'),              ylim = c(-10,10), ylab = 'ACN for CNH')"},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"cnh-1","dir":"Articles","previous_headings":"Finding CNH+ (and CNH)","what":"CNH+","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"default, find_cnhplus searches CNH+ solution.","code":"# ACN profile for CNH+ cnh_plus = find_cnhplus(grid, r = r, w = w, k=2, plus = T) cnh_plus # acn_cnhplus = r2q(r, cnh_plus$purity[1], cnh_plus$ploidy[1]) plot_profile(sa, acn_cnhplus, paste0(sample_name, '_ACN_for_CNHplus.tiff'),              ylim = c(0,10), ylab = 'ACN for CNH+')"},{"path":"https://grendar.github.io/CNHplus/articles/CNHplus.html","id":"stratification-of-cancer-patients-for-survival-by-cnh","dir":"Articles","previous_headings":"","what":"Stratification of cancer patients for survival by CNH+","title":"CNHplus: the chromosomal copy number heterogeneity which respects biological constraints","text":"Stratification patients TCGA study survival CNH+ can performed using analyze_TCGA_study function. First, necessary download CNV data TCGA; use TCGAbiolinks download hg19-based segmented CNV data primary tumor, obtained Affymetrix SNP Array 6.0 platform. order replicate analyses (van Dijk et al. 2021) necessary select subset TCGA samples considered authors. , first, read relevant data Supplement (van Dijk et al. 2021) R session. Next, select data study_name TCGA study match CNV data. Analyze TCGA study. analysis involves finding CNH+ solution every sample study. default, CNH+ solutions sought. takes time; even CNH+ CNH computed. code cached save time re-running vignette. function invisibly saves csv file results; .e., CNH+, purity, ploidy sample. Function plot_survival can used plotting Kaplan-Meier survival functions two groups samples TCGA study: CNH+ equal median vs. samples CNH+ median.","code":"# TCGA study study_name = 'READ' # query = TCGAbiolinks::GDCquery(legacy = T,                  project = paste0('TCGA-', study_name),                   data.category = \"Copy number variation\",                  file.type = 'hg19.seg',                  platform = \"Affymetrix SNP Array 6.0\",                  sample.type = 'Primary Tumor') #> -------------------------------------- #> o GDCquery: Searching in GDC database #> -------------------------------------- #> Genome of reference: hg19 #> -------------------------------------------- #> oo Accessing GDC. This might take a while... #> -------------------------------------------- #> ooo Project: TCGA-READ #> -------------------- #> oo Filtering results #> -------------------- #> ooo By platform #> ooo By file.type #> ooo By sample.type #> ---------------- #> oo Checking data #> ---------------- #> ooo Checking if there are duplicated cases #> ooo Checking if there are results for the query #> ------------------- #> o Preparing output #> ------------------- # download segmented_scna_hg19 data  TCGAbiolinks::GDCdownload(query = query,              method = 'api', files.per.chunk = 10) #'client') #  #> Downloading data for project TCGA-READ #> Of the 169 files for download 169 already exist. #> All samples have been already downloaded data = TCGAbiolinks::GDCprepare(query = query) #> Reading copy number variation files da = as.data.frame(data) # # read in the Supplement to van Dijk et al. with results for tumor samples from TCGA studies vD = openxlsx::read.xlsx(\"https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-23384-6/MediaObjects/41467_2021_23384_MOESM4_ESM.xlsx\") # # filter samples from the study vDx = vD %>% filter(Type == study_name) # # match vD and TCGA im = match(vDx$Samplename, unique(da$Sample)) # # data frame with RCN for the study samples which were considered by van Dijk et al. da_vD = da %>% filter(Sample %in% unique(da$Sample)[im]) # # grid has already been prepared, above # # analyze TCGA study oo = analyze_TCGA_study(study_name, da_vD, grid, k=2) # # read in the results file for the study res = read.csv(paste0(study_name, '_results.csv')) # match samples from results file and the survival data in vDx im_vDx_res = match(vDx$Samplename, res$sample) # KM for two groups; below/above median CNH+ gg_cnhplus = plot_survival(study_name, vDx$OS, vDx$OS_event,                             res$cnh_plus[im_vDx_res],                            type = 'CNH+', ylim = c(0, 1)) gg_cnhplus"},{"path":[]},{"path":"https://grendar.github.io/CNHplus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marian Grendar. Maintainer.","code":""},{"path":"https://grendar.github.io/CNHplus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grendár M., Martínek P., Loderer D., Ondič O. (2022). CNHplus: chromosomal copy number heterogeneity respects biological constraints. bioRxiv. <doi:10.1101/2022.09.30.510279>.","code":"@Article{,   title = {CNHplus: the chromosomal copy number heterogeneity which respects biological constraints},   author = {Marian Grendár and Petr Martínek and Dušan Loderer and Ondrej Ondič},   journal = {bioRxiv},   year = {2022},   doi = {10.1101/2022.09.30.510279}, }"},{"path":"https://grendar.github.io/CNHplus/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Copy Number Heterogeneity with the Non-negativity Constraint Imposed on the Absolute Copy Number Profile of Tumor","text":"CNHplus R library computing Copy Number Heterogeneity (CNH) respects biological constraints.","code":""},{"path":"https://grendar.github.io/CNHplus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Copy Number Heterogeneity with the Non-negativity Constraint Imposed on the Absolute Copy Number Profile of Tumor","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"grendar/CNHplus\")"},{"path":"https://grendar.github.io/CNHplus/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Copy Number Heterogeneity with the Non-negativity Constraint Imposed on the Absolute Copy Number Profile of Tumor","text":"","code":"library(CNHplus) data(sample_data) # sa = sample_data sample_name = sa$Sample[1] # TCGA-AJ-A3EJ-01A-11D-A19X-01 from TCGA-UCEC r = 2^sa$Segment_Mean w = sa$End - sa$Start  # # plot of Relative Copy Number profile of the sample plot_profile(sa, r, paste0(sample_name, '_RCN.tiff'),              ylim = c(0,5), ylab = 'RCN') # # making grid grid = make_grid(purity = seq(0.2, 1, 0.01), ploidy = seq(1.5, 5, 0.01)) # # finding CNHplus by searching over the grid cnh = find_cnhplus(grid, r = r, w = w, k = 1, plus = T) # # computing the Absolute Copy Number profile of tumor recovered by CNH+ acn_cnh = r2q(r, cnh$purity[1], cnh$ploidy[1]) # # ploting the ACN profile recovered by CNH+ plot_profile(sa, acn_cnh, paste0(sample_name, '_ACN_for_CNH.tiff'),              ylim = c(0,10), ylab = 'ACN for CNH+')"},{"path":"https://grendar.github.io/CNHplus/index.html","id":"more","dir":"","previous_headings":"","what":"More","title":"Copy Number Heterogeneity with the Non-negativity Constraint Imposed on the Absolute Copy Number Profile of Tumor","text":"Additional examples illustrating compute CNH+ TCGA studies use CNH+ stratify TCGA cancer patients survival can found vignette.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":null,"dir":"Reference","previous_headings":"","what":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"analyze_TCGA_study takes data TCGA study sample finds CNH+ associated tumor purity, tumor ploidy. Option find CNH+ CNH provided.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"","code":"analyze_TCGA_study(study_name, da, grid, k, both = FALSE)"},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"study_name TCGA study name da data frame containing Sample, Chromosome, Start, End, Num_Probes, Segment_Mean grid grid purities, ploidies search CNH+ (matrix) k many candidate solution return whether find CNH+ well CNH (default F, .e., CNH+ )","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"saves csv results file named study, CNH+, purity, ploidy sample","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"Example shows 1) download RCN profiles samples TCGA study; 2) read Supplementary file van Dijk et al. contains sample names    TCGA tumor samples analyzed authors, well data    (CNH, survival data); 3) select downloaded TCGA RCN data samples analyzed    van Dijk et al.; 4) make grid purities, ploidies CNH+ solution searched ; 5) analyze TCGA study - samples find CNH+ associated purity, ploidy pair 6) compare survival curves subjects CNH+ /median make KM plot","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"van Dijk E, van den Bosch T, Lenos KJ, El Makrini K, Nijman LE, van Essen HF, Lansu N, Boekhout M, Hageman JH, Fitzgerald RC, others (2021). “Chromosomal copy number heterogeneity predicts survival rates across cancers.” Nature communications, 12(1), 1--12.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/analyze_TCGA_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CNH+ and associated tumor purity, tumor ploidy for samples from TCGA study are found — analyze_TCGA_study","text":"","code":"if (FALSE) { # Ex: library('TCGAbiolinks') library('stringi') library('openxlsx') library('dplyr') # # TCGA study study_name = 'READ' # query = TCGAbiolinks::GDCquery(legacy = T,                                project = paste0('TCGA-', study_name),                                data.category = \"Copy number variation\",                                file.type = 'hg19.seg',                                platform = \"Affymetrix SNP Array 6.0\",                                sample.type = 'Primary Tumor') # download segmented_scna_hg19 data TCGAbiolinks::GDCdownload(query = query,                           method = \"api\", files.per.chunk = 10) # client') data = TCGAbiolinks::GDCprepare(query = query) da = as.data.frame(data) # # read in the Supplement to van Dijk et al. with results for tumor samples from TCGA studies vD = openxlsx::read.xlsx(\"https://static-content.springer.com/esm/art%3A10.1038%2Fs41467-021-23384-6/MediaObjects/41467_2021_23384_MOESM4_ESM.xlsx\") # # filter samples from the study vDx = vD %>% filter(Type == study_name) # # match vD and TCGA im = match(vDx$Samplename, unique(da$Sample)) # # data frame with RCN for the study samples which were considered by van Dijk et al. da_vD = da %>% filter(Sample %in% unique(da$Sample)[im]) # # grid grid = make_grid(purity = seq(0.2, 1, 0.01), ploidy = seq(1.5, 5, 0.01)) # # analyze TCGA study oo = analyze_TCGA_study(study_name, da_vD, grid, k=2)  res = read.csv(paste0(study_name, '_results.csv')) # match samples from results file and the survival data in vDx im_vDx_res = match(vDx$Samplename, res$sample) # # survival analysis (below/above median CNH+) gg_cnhplus = plot_survival(study_name,                            vDx$OS, vDx$OS_event,                            res$cnh_plus[im_vDx_res],                            type = 'unfiltered CNH+', ylim = c(0, 1)) gg_cnhplus }"},{"path":"https://grendar.github.io/CNHplus/reference/check_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the ACN tumor profile q, corresponding to RCN sample profile r, tumor purity, tumor ploidy non-negative in every segment? — check_q","title":"Is the ACN tumor profile q, corresponding to RCN sample profile r, tumor purity, tumor ploidy non-negative in every segment? — check_q","text":"check_q checks whether tumor ACN profile q non-negative.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/check_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the ACN tumor profile q, corresponding to RCN sample profile r, tumor purity, tumor ploidy non-negative in every segment? — check_q","text":"","code":"check_q(pu_plo, r)"},{"path":"https://grendar.github.io/CNHplus/reference/check_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the ACN tumor profile q, corresponding to RCN sample profile r, tumor purity, tumor ploidy non-negative in every segment? — check_q","text":"pu_plo vector two components; tumor purity, tumor ploidy r sample RCN profile (vector)","code":""},{"path":"https://grendar.github.io/CNHplus/reference/check_q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the ACN tumor profile q, corresponding to RCN sample profile r, tumor purity, tumor ploidy non-negative in every segment? — check_q","text":"logical; True, tumor ACN profile q non-negative every segment; False otherwise","code":""},{"path":"https://grendar.github.io/CNHplus/reference/find_cnhplus.html","id":null,"dir":"Reference","previous_headings":"","what":"For sample RCN profile r finds CNH+ and the associated tumor purity, tumor ploidy — find_cnhplus","title":"For sample RCN profile r finds CNH+ and the associated tumor purity, tumor ploidy — find_cnhplus","text":"find_cnhplus searching grid, finds value CNH+ associated tumor purity, tumor ploidy sample RCN. also makes possible find CNH.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/find_cnhplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For sample RCN profile r finds CNH+ and the associated tumor purity, tumor ploidy — find_cnhplus","text":"","code":"find_cnhplus(grid, r, w, k, plus = TRUE)"},{"path":"https://grendar.github.io/CNHplus/reference/find_cnhplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For sample RCN profile r finds CNH+ and the associated tumor purity, tumor ploidy — find_cnhplus","text":"grid, grid purities, ploidies (matrix) r sample RCN profile (vector) w vector segment widths k many candidate pairs purity, ploidy solution return plus True (default) CNH+ solved ; False, CNH","code":""},{"path":"https://grendar.github.io/CNHplus/reference/find_cnhplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For sample RCN profile r finds CNH+ and the associated tumor purity, tumor ploidy — find_cnhplus","text":"top k elements grid together associated values objective function kappa","code":""},{"path":[]},{"path":"https://grendar.github.io/CNHplus/reference/kappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes value of the objective function kappa for purity, ploidy pair, RCN sample profile r and associated segments width vector w — kappa","title":"Computes value of the objective function kappa for purity, ploidy pair, RCN sample profile r and associated segments width vector w — kappa","text":"kappa evaluates objective function kappa.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/kappa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes value of the objective function kappa for purity, ploidy pair, RCN sample profile r and associated segments width vector w — kappa","text":"","code":"kappa(pu_plo, r, w)"},{"path":"https://grendar.github.io/CNHplus/reference/kappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes value of the objective function kappa for purity, ploidy pair, RCN sample profile r and associated segments width vector w — kappa","text":"pu_plo vector two components: tumor purity, tumor ploidy r sample RCN profile w vector segments width","code":""},{"path":"https://grendar.github.io/CNHplus/reference/kappa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes value of the objective function kappa for purity, ploidy pair, RCN sample profile r and associated segments width vector w — kappa","text":"value kappa","code":""},{"path":"https://grendar.github.io/CNHplus/reference/kappa_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes value of the objective function kappa for ACN profile q and associated segments width vector w — kappa_q","title":"Computes value of the objective function kappa for ACN profile q and associated segments width vector w — kappa_q","text":"kappa_q evaluates objective function kappa.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/kappa_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes value of the objective function kappa for ACN profile q and associated segments width vector w — kappa_q","text":"","code":"kappa_q(q, w)"},{"path":"https://grendar.github.io/CNHplus/reference/kappa_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes value of the objective function kappa for ACN profile q and associated segments width vector w — kappa_q","text":"q ACN profile tumor (vector) w vector segments width","code":""},{"path":"https://grendar.github.io/CNHplus/reference/kappa_q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes value of the objective function kappa for ACN profile q and associated segments width vector w — kappa_q","text":"value kappa","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes grid for vectors of purities and ploidies — make_grid","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"make_grid creates cartesian product vector purities vector ploidies.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"","code":"make_grid(purity, ploidy)"},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"purity vector purities ploidy vector ploidies","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"matrix comprising cartesian product vector purities vector ploidies","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"van Dijk E, van den Bosch T, Lenos KJ, El Makrini K, Nijman LE, van Essen HF, Lansu N, Boekhout M, Hageman JH, Fitzgerald RC, others (2021). “Chromosomal copy number heterogeneity predicts survival rates across cancers.” Nature communications, 12(1), 1--12.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes grid for vectors of purities and ploidies — make_grid","text":"","code":"# to make grid as in van Dijk et al. grid = make_grid(purity = seq(0.2, 1, 0.01), ploidy = seq(1.5, 5, 0.01))"},{"path":"https://grendar.github.io/CNHplus/reference/make_grid_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"For given RCN profile r of sample and a grid of purities and ploidies, those pairs for which the tumor ACN profile q fails the non-negativity requirement are removed from the grid — make_grid_plus","title":"For given RCN profile r of sample and a grid of purities and ploidies, those pairs for which the tumor ACN profile q fails the non-negativity requirement are removed from the grid — make_grid_plus","text":"make_grid_plus removes grid pairs (purity, ploidy) tumor ACN profile q least one segment's copy negative; tumor ACN profile q obtained sample RCN profile q tumor purity, tumor ploidy.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For given RCN profile r of sample and a grid of purities and ploidies, those pairs for which the tumor ACN profile q fails the non-negativity requirement are removed from the grid — make_grid_plus","text":"","code":"make_grid_plus(grid, r)"},{"path":"https://grendar.github.io/CNHplus/reference/make_grid_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For given RCN profile r of sample and a grid of purities and ploidies, those pairs for which the tumor ACN profile q fails the non-negativity requirement are removed from the grid — make_grid_plus","text":"grid grid purities, ploidies (matrix) r sample RCN  profile (vector)","code":""},{"path":"https://grendar.github.io/CNHplus/reference/make_grid_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For given RCN profile r of sample and a grid of purities and ploidies, those pairs for which the tumor ACN profile q fails the non-negativity requirement are removed from the grid — make_grid_plus","text":"grid (matrix) purities, ploidies","code":""},{"path":"https://grendar.github.io/CNHplus/reference/plot_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots CN profile — plot_profile","title":"Plots CN profile — plot_profile","text":"plot_profile makes gtrellis plot CN profile chromosomes. Sample, Chromosome, Start, End value CN segment input.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/plot_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots CN profile — plot_profile","text":"","code":"plot_profile(sa, cn, filename, ylim = NULL, ylab = \"CN\")"},{"path":"https://grendar.github.io/CNHplus/reference/plot_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots CN profile — plot_profile","text":"sa data frame contains Sample Chromosome Start End cn vector giving CN profile segments specified sa filename name file plot stored ylim vector two elements giving lower, upper values limit CN ylab label placed y axis (default 'CN')","code":""},{"path":"https://grendar.github.io/CNHplus/reference/plot_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots CN profile — plot_profile","text":"invisibly, saves plot tiff","code":""},{"path":[]},{"path":"https://grendar.github.io/CNHplus/reference/plot_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots CN profile — plot_profile","text":"","code":"if (FALSE) { # Ex: profile plot for a sample; #     assumes that example from analyze_TCGA_study is already run # sample_names = unique(da_vD$Sample) i=1 sample_names[i] #[1] \"TCGA-AF-2687-01A-02D-1732-01\" sa = da %>% filter(Sample == sample_names[i]) # # RCN r = 2^sa$Segment_Mean w = w = sa$End - sa$Start # should be +1 plot_profile(sa, r, paste0(sample_names[i], '_RCN.tiff'),              ylim = c(0,3), ylab = 'RCN') # # ACN for CNH (unfiltered) cnh = find_cnhplus(grid, r = r, w = w, k=2, plus = F) cnh #   purity ploidy     kappa #1   0.25   2.99 0.1733696 #2   0.25   3.00 0.1734264  acn_cnh = r2q(r, cnh$purity[1], cnh$ploidy[1]) plot_profile(sa, acn_cnh, paste0(sample_names[i], '_ACN_for_CNH.tiff'),             ylim = c(-10,10), ylab = 'ACN for CNH') # # ACN for CNH+ # oo[[i]] #                   sample_name purity ploidy     kappa #1 TCGA-AF-2687-01A-02D-1732-01      1   1.94 0.1880932 #2 TCGA-AF-2687-01A-02D-1732-01      1   1.93 0.1883289  acn_cnhplus = r2q(r, oo[[i]]$purity[1], oo[[i]]$ploidy[1]) plot_profile(sa, acn_cnhplus, paste0(sample_names[i], '_ACN_for_CNHplus.tiff'),              ylim = c(-10,10), ylab = 'ACN for CNH+') }"},{"path":"https://grendar.github.io/CNHplus/reference/plot_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of survival functions of samples from TCGA study with CNH below or equal to median vs samples with CNH above median — plot_survival","title":"Plot of survival functions of samples from TCGA study with CNH below or equal to median vs samples with CNH above median — plot_survival","text":"plot_survival uses survival data TCGA study values CNH create plot exhibiting Kaplan Meier survival curves two groups samples: CNH median CNH median. P-value log-rank test equality survival curves returned plot together number risk table.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/plot_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of survival functions of samples from TCGA study with CNH below or equal to median vs samples with CNH above median — plot_survival","text":"","code":"plot_survival(   study_name,   survival_time,   survival_event,   cnh,   type,   ylim = c(0, 1) )"},{"path":"https://grendar.github.io/CNHplus/reference/plot_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of survival functions of samples from TCGA study with CNH below or equal to median vs samples with CNH above median — plot_survival","text":"study_name name TCGA study survival_time vector survival times subjects study survival_event vector survival events subjects study cnh vector CNH values type string placed legend (e.g., 'unfiltered CNH+') ylim permits limit y axis survival plot","code":""},{"path":"https://grendar.github.io/CNHplus/reference/plot_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of survival functions of samples from TCGA study with CNH below or equal to median vs samples with CNH above median — plot_survival","text":"ggsurvplot","code":""},{"path":[]},{"path":"https://grendar.github.io/CNHplus/reference/r2q.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes Absolute Copy Number (ACN) tumor profile from Relative Copy Number (RCN) sample profile and tumor purity, tumor ploidy — r2q","title":"Computes Absolute Copy Number (ACN) tumor profile from Relative Copy Number (RCN) sample profile and tumor purity, tumor ploidy — r2q","text":"r2q computes ACN tumor tumor RCN, tumor purity, tumor ploidy.","code":""},{"path":"https://grendar.github.io/CNHplus/reference/r2q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes Absolute Copy Number (ACN) tumor profile from Relative Copy Number (RCN) sample profile and tumor purity, tumor ploidy — r2q","text":"","code":"r2q(r, purity, ploidy)"},{"path":"https://grendar.github.io/CNHplus/reference/r2q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes Absolute Copy Number (ACN) tumor profile from Relative Copy Number (RCN) sample profile and tumor purity, tumor ploidy — r2q","text":"r sample RCN purity tumor purity (scalar) ploidy tumor ploidy (scalar)","code":""},{"path":"https://grendar.github.io/CNHplus/reference/r2q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes Absolute Copy Number (ACN) tumor profile from Relative Copy Number (RCN) sample profile and tumor purity, tumor ploidy — r2q","text":"ACN tumor profile (vector)","code":""},{"path":"https://grendar.github.io/CNHplus/reference/sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","title":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","text":"dataset containing RCN data TCGA-AJ-A3EJ-01A-11D-A19X-01 sample","code":""},{"path":"https://grendar.github.io/CNHplus/reference/sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","text":"","code":"data(sample_data)"},{"path":"https://grendar.github.io/CNHplus/reference/sample_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","text":"data frame 646 rows 6 variables: Sample sample name Chromosome chromosome, 1:24 Start start position segment End end position segment Num_Probes number probes Segment_Mean log2 relative copy number","code":""},{"path":"https://grendar.github.io/CNHplus/reference/sample_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","text":"https://gdac.broadinstitute.org","code":""},{"path":"https://grendar.github.io/CNHplus/reference/sample_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for TCGA-AJ-A3EJ-01A-11D-A19X-01 sample from TCGA-UCEC study — sample_data","text":"","code":"if (FALSE) { data(sample_data) sa = sample_data sample_name = sa$Sample[1] r = 2^sa$Segment_Mean w = sa$End - sa$Start # should be +1 # # RCN profile plot plot_profile(sa, r, paste0(sample_name, '_RCN.tiff'),              ylim = c(0,5), ylab = 'RCN')  # ACN profile for CNH grid = make_grid(purity = seq(0.2, 1, 0.01), ploidy = seq(1.5, 5, 0.01)) cnh = find_cnhplus(grid, r = r, w = w, k=2, plus = F) # cnh #  purity ploidy     kappa #1   0.24   2.87 0.1384375 #2   0.27   3.86 0.1387208 # acn_cnh = r2q(r, cnh$purity[1], cnh$ploidy[1]) plot_profile(sa, acn_cnh, paste0(sample_name, '_ACN_for_CNH.tiff'),             ylim = c(-10,10), ylab = 'ACN for CNH')  # ACN profile for CNH+ cnh_plus = find_cnhplus(grid, r = r, w = w, k=2, plus = T) cnh_plus #  purity ploidy     kappa #1      1   4.98 0.1647427 #2      1   4.97 0.1648025  acn_cnhplus = r2q(r, cnh_plus$purity[1], cnh_plus$ploidy[1]) plot_profile(sa, acn_cnhplus, paste0(sample_name, '_ACN_for_CNHplus.tiff'),             ylim = c(0,10), ylab = 'ACN for CNH+') }"},{"path":"https://grendar.github.io/CNHplus/reference/topk.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of tumor purities, tumor ploidies is sorted by the associated values of kappas (values of the objective function)\nand top k values (i.e., with the smallest kappa) are returned — topk","title":"Grid of tumor purities, tumor ploidies is sorted by the associated values of kappas (values of the objective function)\nand top k values (i.e., with the smallest kappa) are returned — topk","text":"Grid tumor purities, tumor ploidies sorted associated values kappas (values objective function) top k values (.e., smallest kappa) returned","code":""},{"path":"https://grendar.github.io/CNHplus/reference/topk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of tumor purities, tumor ploidies is sorted by the associated values of kappas (values of the objective function)\nand top k values (i.e., with the smallest kappa) are returned — topk","text":"","code":"topk(grid, kappas, k)"},{"path":"https://grendar.github.io/CNHplus/reference/topk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of tumor purities, tumor ploidies is sorted by the associated values of kappas (values of the objective function)\nand top k values (i.e., with the smallest kappa) are returned — topk","text":"grid grid tumor purities, tumor ploidies (matrix) kappas vector associated values objective function kappa k top k returned","code":""},{"path":"https://grendar.github.io/CNHplus/reference/topk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of tumor purities, tumor ploidies is sorted by the associated values of kappas (values of the objective function)\nand top k values (i.e., with the smallest kappa) are returned — topk","text":"elements grid k smallest values kappa, together corresponding valaues kappa","code":""},{"path":[]}]
